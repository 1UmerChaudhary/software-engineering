{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","Checkouts.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/PaidScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","ADD_TO_CART","REMOVE_FROM_CART","SAVE_SHIPPING_ADDRESS","SAVE_PAYMENT_METHOD","CLEAR_CART","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_GET_REQUEST","USER_GET_SUCCESS","USER_GET_FAIL","USER_MODIFY_REQUEST","USER_MODIFY_SUCCESS","USER_MODIFY_FAIL","USER_MODIFY_RESET","PLACE_ORDER_REQUEST","PLACE_ORDER_SUCCESS","PLACE_ORDER_FAIL","ORDER_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","ALL_ORDERS_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetail","product","review","productDelete","success","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","userDetails","user","userUpdate","userList","users","userDelete","userGet","userModify","orderPlace","order","orderDetails","orderItems","orderPay","allOrders","orders","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","useEffect","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","value","text","color","style","Product","val","v","_id","Card","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","a","axios","get","data","response","detail","message","Loader","Spinner","height","width","margin","display","animation","role","Message","children","Alert","HomseScreen","sm","md","lg","xl","ProductScreen","match","history","params","useState","qty","setQty","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","remove","removeFromCart","length","rounded","reduce","sum","toFixed","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","configuration","headers","post","loginUser","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","registerUser","required","getOrderDetails","Authorization","token","ProfileScreen","loadingOrders","errorOrders","put","updatedUser","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","Checkouts","s","s1","s2","s3","s4","ShippingScreen","address","setAddress","city","setCity","country","setCountry","postalCode","setPostalCode","textAlign","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","object","index","ListGroupItem","vaiant","placedOrder","OrderScreen","orderId","unique","href","isDelivered","deliveredAt","PaidScreen","UserListScreen","successComplete","deleteUserFunction","window","confirm","delete","userDeleted","bordered","hover","cursor","UserEditScreen","userId","admin","setAdmin","loadingModify","errorModify","modifyUser","ProductListScreen","loadingDelete","errorDelete","deleteProductFunction","deleteProduct","category","brand","App","path","component","HomeScreen","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.230b103c.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL =    'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL =    'PRODUCT_DETAILS_FAIL'\r\n","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\r\n\r\nexport const SAVE_SHIPPING_ADDRESS = 'SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD'\r\n\r\nexport const CLEAR_CART = 'CLEAR_CART'\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL    = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL    = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET    = \"USER_DETAILS_RESET\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL    = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET    = \"USER_UPDATE_RESET\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL    = \"USER_LIST_FAIL\"\r\nexport const USER_LIST_RESET    = \"USER_LIST_RESET\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\"\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\"\r\nexport const USER_DELETE_FAIL    = \"USER_DELETE_FAIL\"\r\n\r\nexport const USER_GET_REQUEST = \"USER_GET_REQUEST\"\r\nexport const USER_GET_SUCCESS = \"USER_GET_SUCCESS\"\r\nexport const USER_GET_FAIL    = \"USER_GET_FAIL\"\r\n\r\nexport const USER_MODIFY_REQUEST = \"USER_MODIFY_REQUEST\"\r\nexport const USER_MODIFY_SUCCESS = \"USER_MODIFY_SUCCESS\"\r\nexport const USER_MODIFY_FAIL    = \"USER_MODIFY_FAIL\"\r\nexport const USER_MODIFY_RESET    = \"USER_MODIFY_RESET\"","export const PLACE_ORDER_REQUEST = \"PLACE_ORDER_REQUEST\"\r\nexport const PLACE_ORDER_SUCCESS = \"PLACE_ORDER_SUCCESS\"\r\nexport const PLACE_ORDER_FAIL    = \"PLACE_ORDER_FAIL\"\r\nexport const ORDER_RESET = \"ORDER_RESET\"\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\r\nexport const ORDER_DETAILS_FAIL    = \"ORDER_DETAILS_FAIL\"\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\"\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\"\r\nexport const ORDER_PAY_FAIL    = \"ORDER_PAY_FAIL\"\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\"\r\n\r\nexport const ALL_ORDERS_REQUEST = \"ALL_ORDERS_REQUEST\"\r\nexport const ALL_ORDERS_SUCCESS = \"ALL_ORDERS_SUCCESS\"\r\nexport const ALL_ORDERS_FAIL    = \"ALL_ORDERS_FAIL\"\r\nexport const ALL_ORDERS_RESET = \"ALL_ORDERS_RESET\"","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {\r\n        productListReducer,\r\n        productDetailedReducer,\r\n        productDeleteReducer\r\n       } from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducer} from './reducers/userReducers'\r\nimport { \r\n            userRegisterReducer,\r\n            userDetailsReducer,\r\n            userUpdateReducer,\r\n            userListReducer,\r\n            userDeleteReducer,\r\n            userGetReducer,\r\n            userModifyReducer\r\n       }     from './reducers/userReducers'\r\nimport {orderPlaceReducer,orderDetailsReducer,orderPayReducer,allOrdersReducer} from './reducers/orderReducers'\r\n\r\nconst reducer= combineReducers({\r\n    productList:productListReducer,\r\n    productDetail:productDetailedReducer,\r\n    productDelete:productDeleteReducer,\r\n    \r\n    cart:cartReducer, \r\n    \r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdate:userUpdateReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userGet:userGetReducer,\r\n    userModify:userModifyReducer,\r\n\r\n    orderPlace:orderPlaceReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    allOrders:allOrdersReducer,\r\n})\r\n\r\nconst cartItemsFromStorage= localStorage.getItem('cartItems') ? \r\n    JSON.parse(localStorage.getItem('cartItems')) : [] \r\n\r\nconst userInfoFromStorage= localStorage.getItem('userInfo') ? \r\nJSON.parse(localStorage.getItem('userInfo')) : null  \r\n\r\nconst shippingAddressFromStorage= localStorage.getItem('shippingAddress') ? \r\nJSON.parse(localStorage.getItem('shippingAddress')) : {} \r\nconst paymentMethodFromStorage= localStorage.getItem('paymentMethod') ? \r\nJSON.parse(localStorage.getItem('paymentMethod')) : {}  \r\n\r\nconst initialState = {\r\n    cart : { cartItems: cartItemsFromStorage, shippingAddress:shippingAddressFromStorage, paymentMethod :paymentMethodFromStorage},\r\n    userLogin : { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware=[thunk]\r\n\r\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n        PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n       } \r\nfrom '../constants/productConstants'\r\n\r\nexport const productListReducer= (state={products:[]},action)=>{\r\n    switch(action.type){\r\n    case PRODUCT_LIST_REQUEST:\r\n    \r\n    return {loading:true,products:[]}\r\n    \r\n    case PRODUCT_LIST_SUCCESS:\r\n        return{loading:false, products:action.payload}\r\n    \r\n    case PRODUCT_LIST_FAIL:\r\n        return{loading:false, error:action.payload}   \r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\nexport const productDetailedReducer= (state={product:{review:[]}},action)=>{\r\n    switch(action.type){\r\n    case PRODUCT_DETAILS_REQUEST:\r\n    \r\n    return {loading:true,...state}\r\n    \r\n    case PRODUCT_DETAILS_SUCCESS:\r\n        return{loading:false, product:action.payload}\r\n    \r\n    case PRODUCT_DETAILS_FAIL:\r\n        return{loading:false, error:action.payload}   \r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\nexport const productDeleteReducer= (state={},action)=>{\r\n    switch(action.type){\r\n    case PRODUCT_DELETE_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case PRODUCT_DELETE_SUCCESS:\r\n        return{loading:false,success:true}\r\n    \r\n    case PRODUCT_DELETE_FAIL:\r\n        return{loading:false, error:action.payload}   \r\n    default:\r\n        return state\r\n}\r\n}","import {\r\n    ADD_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    SAVE_SHIPPING_ADDRESS,\r\n    SAVE_PAYMENT_METHOD,\r\n    CLEAR_CART\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = ( state = { cartItems :[], shippingAddress:{}, paymentMethod:{}  }, action ) => {\r\n    switch(action.type){\r\n    case ADD_TO_CART:\r\n        const item= action.payload\r\n        //console.log(\"payload data\",latest)\r\n        const existItem= state.cartItems.find(x =>x.product=== item.product )\r\n        //console.log(\"ye lo empty\",cartItems)\r\n    if(existItem)\r\n    {\r\n        return{\r\n            ...state,\r\n            cartItems:state.cartItems.map(x=>\r\n                x.product=== existItem.product ? item : x) \r\n        }\r\n    }\r\n    else\r\n    {\r\n        return{\r\n            ...state,\r\n            cartItems:[...state.cartItems,item]\r\n        }\r\n     }\r\n\r\n    case REMOVE_FROM_CART:\r\n        return{\r\n            ...state,\r\n            cartItems:state.cartItems.filter(x=>\r\n                x.product !== action.payload) \r\n        }\r\n\r\n    case SAVE_SHIPPING_ADDRESS:\r\n        return {\r\n            ...state,\r\n            shippingAddress:action.payload\r\n        } \r\n    case SAVE_PAYMENT_METHOD:\r\n        return {\r\n            ...state,\r\n            paymentMethod:action.payload\r\n        }\r\n    case CLEAR_CART:\r\n        return {\r\n            ...state,\r\n            cartItems :[]\r\n        } \r\n                \r\n    default:\r\n        return state \r\n}\r\n  \r\n}\r\n\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_GET_REQUEST,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAIL,\r\n\r\n    USER_MODIFY_REQUEST,\r\n    USER_MODIFY_SUCCESS,\r\n    USER_MODIFY_FAIL,\r\n    USER_MODIFY_RESET\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer= (state={},action)=>{\r\n    switch(action.type){\r\n    case USER_LOGIN_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case USER_LOGIN_SUCCESS:\r\n        return{loading:false, userInfo:action.payload}\r\n    \r\n    case USER_LOGIN_FAIL:\r\n        return{loading:false, error:action.payload} \r\n    case USER_LOGOUT:\r\n            return{} \r\n\r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\n\r\nexport const userRegisterReducer= (state={},action)=>{\r\n    switch(action.type){\r\n    case USER_REGISTER_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case USER_REGISTER_SUCCESS:\r\n        return{loading:false, userInfo:action.payload}   \r\n    \r\n    case USER_REGISTER_FAIL:\r\n        return{loading:false, error:action.payload} \r\n    \r\n        case USER_LOGOUT:\r\n            return{} \r\n\r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\n\r\nexport const userDetailsReducer= (state={user:{}},action)=>{\r\n    switch(action.type){\r\n    case USER_DETAILS_REQUEST:\r\n    \r\n    return {...state, loading:true}\r\n    \r\n    case USER_DETAILS_SUCCESS:\r\n        return{loading:false, user:action.payload}   \r\n    \r\n    case USER_DETAILS_FAIL:\r\n        return{loading:false, error:action.payload}\r\n    case USER_DETAILS_RESET:\r\n        return{user:{}}\r\n     \r\n    \r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\nexport const userUpdateReducer= (state={},action)=>{\r\n    switch(action.type){\r\n    case USER_UPDATE_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case USER_UPDATE_SUCCESS:\r\n        return{loading:false,success:true, userInfo:action.payload}   \r\n    \r\n    case USER_UPDATE_FAIL:\r\n        return{loading:false, error:action.payload} \r\n    case USER_UPDATE_RESET:\r\n        return{}     \r\n\r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\nexport const userListReducer= (state={users:[]},action)=>{\r\n    switch(action.type){\r\n    case USER_LIST_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case USER_LIST_SUCCESS:\r\n        return{loading:false,users:action.payload}   \r\n    \r\n    case USER_LIST_FAIL:\r\n        return{loading:false, error:action.payload} \r\n    case USER_LIST_RESET:\r\n        return{}     \r\n\r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\nexport const userDeleteReducer= (state={},action)=>{\r\n    switch(action.type){\r\n    case USER_DELETE_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case USER_DELETE_SUCCESS:\r\n        return{loading:false,success:true}   \r\n    \r\n    case USER_DELETE_FAIL:\r\n        return{loading:false, error:action.payload} \r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\nexport const userGetReducer= (state={user:[]},action)=>{\r\n    switch(action.type){\r\n    case USER_GET_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case USER_GET_SUCCESS:\r\n        return{loading:false,user:action.payload}   \r\n    \r\n    case USER_GET_FAIL:\r\n        return{loading:false, error:action.payload} \r\n    default:\r\n        return state\r\n\r\n}\r\n}\r\n\r\nexport const userModifyReducer= (state={user:{}},action)=>{\r\n    switch(action.type){\r\n    case USER_MODIFY_REQUEST:\r\n    \r\n    return {loading:true}\r\n    \r\n    case USER_MODIFY_SUCCESS:\r\n        return{loading:false,success:true}   \r\n    \r\n    case USER_MODIFY_FAIL:\r\n        return{loading:false, error:action.payload} \r\n    case USER_MODIFY_RESET:\r\n            return{user:{}}     \r\n    default:\r\n        return state\r\n\r\n}\r\n}","import {\r\n   \r\n\r\n    PLACE_ORDER_REQUEST,\r\n    PLACE_ORDER_SUCCESS,\r\n    PLACE_ORDER_FAIL,\r\n    ORDER_RESET,\r\n    \r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    ALL_ORDERS_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderPlaceReducer= (state={},action)=>{\r\n    switch(action.type){\r\n    case PLACE_ORDER_REQUEST:\r\n    \r\n    return {\r\n        loading:true\r\n    }\r\n    \r\n    case PLACE_ORDER_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            success:true,\r\n             order:action.payload\r\n            }\r\n    \r\n    case PLACE_ORDER_FAIL:\r\n        return{\r\n            loading:false, \r\n            error:action.payload\r\n        } \r\n    case ORDER_RESET:\r\n        return{}         \r\n    \r\n    default:\r\n    return state\r\n\r\n}\r\n}\r\n\r\n\r\nexport const orderDetailsReducer= (state={loading:true, orderItems:[],shippingAddress:{}},action)=>{\r\n    switch(action.type){\r\n    case ORDER_DETAILS_REQUEST:\r\n    \r\n    return {\r\n        ...state,\r\n        loading:true\r\n    }\r\n    \r\n    case ORDER_DETAILS_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            order:action.payload\r\n            }\r\n    \r\n    case ORDER_DETAILS_FAIL:\r\n        return{\r\n            loading:false, \r\n            error:action.payload\r\n        }      \r\n    \r\n    default:\r\n    return state\r\n\r\n}\r\n}\r\n\r\nexport const orderPayReducer= (state={loading:true, orderItems:[],shippingAddress:{}},action)=>{\r\n    switch(action.type){\r\n    case ORDER_PAY_REQUEST:\r\n    \r\n    return {\r\n        loading:true\r\n    }\r\n    \r\n    case ORDER_PAY_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            success:true\r\n            }\r\n    \r\n    case ORDER_PAY_FAIL:\r\n        return{\r\n            loading:false, \r\n            error:action.payload\r\n        }      \r\n    \r\n    case ORDER_PAY_RESET:\r\n        return{\r\n              }  \r\n\r\n    default:\r\n    return state\r\n\r\n}\r\n}\r\n\r\nexport const allOrdersReducer= (state={orders:[]},action)=>{\r\n    switch(action.type){\r\n    case ALL_ORDERS_REQUEST:\r\n    \r\n    return {\r\n        loading:true\r\n    }\r\n    \r\n    case ALL_ORDERS_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            orders:action.payload\r\n            }\r\n    \r\n    case ALL_ORDERS_FAIL:\r\n        return{\r\n            loading:false, \r\n            error:action.payload\r\n        }      \r\n    \r\n    case ALL_ORDERS_RESET:\r\n        return{\r\n            orders:[]\r\n}  \r\n\r\n    default:\r\n    return state\r\n\r\n}\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { Navbar,Nav, Container,NavDropdown } from \"react-bootstrap\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {logoutUser} from '../actions/userActions'\r\nconst Header=()=> {\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector(state=>state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [userInfo])\r\n  const logOutFunction = ()=>{\r\n    dispatch(logoutUser())\r\n  }\r\n    return (\r\n        <header>\r\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect  >\r\n        <Container>\r\n\r\n<LinkContainer to='/'>\r\n  <Navbar.Brand  >WebStore</Navbar.Brand>\r\n </LinkContainer>\r\n \r\n <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n \r\n <Navbar.Collapse id=\"basic-navbar-nav\">\r\n <Nav className=\"mr-auto\">\r\n \r\n <LinkContainer to='/Cart'>\r\n    <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n </LinkContainer>\r\n\r\n {userInfo ? (  \r\n\r\n  <NavDropdown title = {userInfo.name} id='username'>\r\n  \r\n    \r\n   <LinkContainer to='/profile'>\r\n   <NavDropdown.Item>profile</NavDropdown.Item>\r\n   </LinkContainer>\r\n  \r\n  <NavDropdown.Item onClick={logOutFunction}> LogOut</NavDropdown.Item>\r\n  </NavDropdown>\r\n\r\n ):  (<LinkContainer to='/Login'>\r\n      <Nav.Link ><i className=\"fas fa-user \"></i>Login</Nav.Link>\r\n</LinkContainer>)}\r\n\r\n{\r\n  userInfo && userInfo.isAdmin &&(  \r\n\r\n<NavDropdown title = \"Admin\" id='Admin-queue'>\r\n\r\n  \r\n<LinkContainer to='/admin/userlist'>\r\n<NavDropdown.Item>usersList</NavDropdown.Item>\r\n</LinkContainer>\r\n\r\n<LinkContainer to='/admin/orders'>\r\n<NavDropdown.Item>orders</NavDropdown.Item>\r\n</LinkContainer>\r\n\r\n<LinkContainer to='/admin/products'>\r\n<NavDropdown.Item>products</NavDropdown.Item>\r\n</LinkContainer>\r\n\r\n</NavDropdown>\r\n\r\n)}  \r\n \r\n </Nav>\r\n \r\n </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>   \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_GET_REQUEST,\r\n    USER_GET_SUCCESS,\r\n    USER_GET_FAIL,\r\n\r\n    USER_MODIFY_REQUEST,\r\n    USER_MODIFY_SUCCESS,\r\n    USER_MODIFY_FAIL\r\n} \r\nfrom '../constants/userConstants';\r\n\r\nimport {ALL_ORDERS_RESET}from '../constants/orderConstants';\r\n\r\nimport axios from 'axios'\r\n\r\nexport const loginUser =(email,password) => async (dispatch)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_LOGIN_REQUEST\r\n    })\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json'\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.post(\r\n        '/api/users/login/',\r\n        {'username': email, 'password':password},\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_LOGIN_SUCCESS,\r\n              payload:data\r\n            })\r\n\r\n              localStorage.setItem('userInfo', JSON.stringify(data))\r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\nexport const logoutUser =()=>  (dispatch)=>{\r\n        localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type:USER_LOGOUT\r\n      })\r\n    dispatch({\r\n        type:USER_DETAILS_RESET\r\n      })  \r\n\r\n    dispatch({\r\n        type:ALL_ORDERS_RESET\r\n    }) \r\n      \r\n    dispatch({\r\n        type:USER_LIST_RESET\r\n        })  \r\n      \r\n        \r\n}\r\n\r\nexport const registerUser =(name,email,password) => async (dispatch)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_REGISTER_REQUEST\r\n    })\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json'\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.post(\r\n        '/api/users/register/',\r\n        {'name':name,'email': email, 'password':password},\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_REGISTER_SUCCESS,\r\n              payload:data\r\n            })\r\n    \r\n    dispatch({\r\n                type:USER_LOGIN_SUCCESS,\r\n                payload:data\r\n              })\r\n\r\n              localStorage.setItem('userInfo', JSON.stringify(data))\r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\n\r\nexport const detailedUser =() => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_DETAILS_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.get(\r\n        '/api/users/profile/',\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_DETAILS_SUCCESS,\r\n              payload:data\r\n            })\r\n   \r\n            \r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\n\r\nexport const updatedUser =(name,email,password) => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_UPDATE_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.put(\r\n        '/api/users/profile/update/',\r\n        {'name':name,'email': email, 'password':password},\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_UPDATE_SUCCESS,\r\n              payload:data\r\n            })\r\n    dispatch({\r\n                type:USER_LOGIN_SUCCESS,\r\n                payload:data\r\n              })        \r\n   \r\n    localStorage.setItem('userInfo', JSON.stringify(data))       \r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_UPDATE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\nexport const listUser =() => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_LIST_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.get(\r\n        '/api/users/',\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_LIST_SUCCESS,\r\n              payload:data\r\n            })    \r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\nexport const userDeleted =(id) => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_DELETE_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.delete(\r\n        `/api/users/delete/${id}/`,\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_DELETE_SUCCESS,\r\n              payload:data\r\n            })    \r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_DELETE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\nexport const getUser =(id) => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_GET_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.get(\r\n        `/api/users/${id}/`,\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_GET_SUCCESS,\r\n              payload:data\r\n            })    \r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_GET_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\nexport const modifyUser =(id,name,email,admin) => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:USER_MODIFY_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.put(\r\n        `/api/users/update/${id}/`,\r\n        {'name':name,'email': email, 'is_Admin':admin},\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:USER_MODIFY_SUCCESS,\r\n            })\r\n    \r\n    dispatch({\r\n        type:USER_DETAILS_SUCCESS,\r\n        payload:data\r\n        })            \r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:USER_MODIFY_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n","import {Container,Row,Col} from 'react-bootstrap'\r\n\r\nconst Footer=()=> {\r\n    return (\r\n        <footer className='text-center py-3'>\r\n        <Container> \r\n        <Row>\r\n        <Col>\r\n        CopyRight &copy; WebStore\r\n        </Col>\r\n        </Row>\r\n\r\n        </Container>\r\n       \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nconst Rating=({value,text,color})=> {\r\n         \r\n    return (\r\n        <div className='rating'>\r\n        \r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=1\r\n                    ? 'fas fa-star'\r\n                    : value>=0.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'fas fa-star-empty' \r\n                    \r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=2\r\n                    ? 'fas fa-star'\r\n                    : value>=1.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'fas fa-star-empty'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=3\r\n                    ? 'fas fa-star'\r\n                    : value>=2.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'fas fa-star-empty'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=4\r\n                    ? 'fas fa-star'\r\n                    : value>=   3.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'fas fa-star-empty'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=5\r\n                    ? 'fas fa-star'\r\n                    : value>=4.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'fas fa-star-empty'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            {text}\r\n        </div>\r\n    )\r\n            }\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport {Card} from 'react-bootstrap';\r\nimport Rating from './Rating'\r\n\r\nimport {Link} from 'react-router-dom'\r\n \r\nconst Product=({val})=> {\r\n    let v=val._id\r\n    //console.log(22222)\r\n    //console.log(v)\r\n    return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/product/${v}`}>\r\n            <Card.Img src={val.image} />\r\n      </Link>\r\n      \r\n      <Card.Body>\r\n            <Link to={`/product/${v}`}>\r\n        <Card.Title as=\"div\">\r\n            <strong> {val.name}</strong>\r\n        </Card.Title>\r\n            </Link>\r\n   \r\n\r\n      <Card.Text as='div'>\r\n        <div className='my-3'>\r\n        <Rating value={val.rating} text={`${val.numReviews} reviews`} color={'yellow'}/>\r\n        </div>\r\n      </Card.Text>\r\n\r\n      <Card.Text as='h3'> \r\n       ${val.price}        \r\n      </Card.Text>\r\n\r\n\r\n     </Card.Body>\r\n\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default Product;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL\r\n} \r\nfrom '../constants/productConstants';\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listProducts=()=>async (dispatch)=>{\r\n\r\n    try{\r\n    dispatch({type:PRODUCT_LIST_REQUEST})\r\n    const {data} =await axios.get('/api/products/')\r\n    dispatch({type:PRODUCT_LIST_SUCCESS,\r\n              payload:data})\r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:PRODUCT_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\n\r\nexport const DetailedProduct=(id)=>async (dispatch)=>{\r\n    try{\r\n    dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n    const {data} =await axios.get(`/api/products/${id}`)\r\n    dispatch({type:PRODUCT_DETAILS_SUCCESS,\r\n              payload:data})\r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:PRODUCT_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}\r\n\r\nexport const deleteProduct=(id)=>async (dispatch,getState)=>{\r\n    try{\r\n    \r\n        dispatch(\r\n        {type:PRODUCT_DELETE_REQUEST}\r\n        )\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.delete(\r\n        `/api/products/delete/${id}`,\r\n        configuration\r\n    )\r\n    dispatch(\r\n        {type:PRODUCT_DELETE_SUCCESS,\r\n              payload:data}\r\n              )\r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch({type:PRODUCT_DELETE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }\r\n}","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\nconst Loader=()=> {\r\n    return (\r\n        \r\n            <Spinner style={{height:\"100px\",width:\"100px\",margin:\"auto\",display:\"block\"}} animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\" >Loading...</span>\r\n            </Spinner>\r\n        \r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message=({variant,children}) =>{\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect} from 'react';\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport {useDispatch, useSelector}from 'react-redux'\r\nimport {listProducts} from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n//import p from '../products';\r\n\r\nconst HomseScreen=()=>{\r\n   \r\n    const dispatch=useDispatch()\r\n    \r\n    const productList=useSelector(state=>state.productList)\r\n    const {error,loading,products}=productList\r\n\r\n     \r\n    useEffect(() => {\r\n    \r\n        dispatch(listProducts())\r\n        \r\n    }, [dispatch])\r\n\r\n    return(\r\n        <div>\r\n        <h1>LATEST PRODUCTS</h1>\r\n        {loading ? <Loader/>\r\n        : error ?<Message variant='danger'>{error}</Message>\r\n        :\r\n        <Row>\r\n            {   \r\n            products.map(val=>(\r\n                \r\n                <Col key={val._id} sm={12} md={6} lg={4} xl={3}>\r\n                \r\n                 <Product val={val}/>\r\n                </Col>\r\n            ))}\r\n            </Row>\r\n            \r\n        \r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomseScreen;","import React, {useState, useEffect} from 'react';\r\n//import products from '../products'\r\nimport {Row,Col,Button,Image,ListGroup,Card,Form} from 'react-bootstrap'\r\nimport {useDispatch, useSelector}from 'react-redux'\r\nimport {DetailedProduct} from '../actions/productActions'\r\nimport {Link} from 'react-router-dom'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\n//import Message from '../components/Message'\r\n\r\nconst ProductScreen=({match,history}  )=> {\r\n\r\n     let val= match.params.id\r\n     const [qty,setQty]=useState(1)\r\n\r\n    const dispatch=useDispatch()\r\n    const productDetail=useSelector(state=>state.productDetail)\r\n    const {loading,product}=productDetail\r\n     \r\n     useEffect(() => {\r\n     dispatch( DetailedProduct(val))     \r\n     }, [dispatch,match,val])\r\n\r\n     const addToCartFunction=()=>\r\n     { \r\n           history.push(`/Cart/${match.params.id}?qty=${qty}`)\r\n\r\n     }\r\n\r\n    return (\r\n        <div>\r\n        \r\n            <Link to='/' className=\"btn btn-dark my-3\">GO BACK</Link>\r\n            {\r\n                loading ? <Loader />\r\n                :\r\n            \r\n            <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid/>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'yellow'}>{product.name}</Rating>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Description:{product.description}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Price:{product.price}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                  <Card   >\r\n                    <ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >\r\n                                Price: \r\n                            </Col>\r\n\r\n                            <Col >\r\n                                 <strong>${product.price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item> \r\n\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                        <Col >\r\n                            Status:                            \r\n                        </Col>\r\n                           <Col >\r\n                            {product.countInStock>0 ? 'IN STOCK':'OUT OF STOCK'}                               \r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item> \r\n                    {\r\n                        product.countInStock > 0 &&(\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                        <Col >\r\n                            Qty                            \r\n                        </Col>\r\n                            <Col className='my-1'>\r\n                            <Form.Control as=\"select\" value={qty} onChange={(e)=>{setQty(e.target.value)}} >\r\n\r\n                           {\r\n                                [...Array(product.countInStock).keys()].map((val)=>\r\n                                {\r\n                                    return(\r\n                                    <option key={val+1} value={val+1}>\r\n                                    {val+1}\r\n                                    </option>)\r\n                                }\r\n                                )\r\n                           }\r\n\r\n                            </Form.Control>                              \r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item> )\r\n                    \r\n                    }\r\n\r\n                    <ListGroup.Item>\r\n\r\n                    <Button onClick={addToCartFunction} className='btn-block'  type ='button' disabled={product.countInStock<1}>ADD TO CART</Button>\r\n                    </ListGroup.Item>\r\n\r\n                    </ListGroup>    \r\n                  </Card>\r\n\r\n             </Col>\r\n            </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios';\r\nimport {\r\n    ADD_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    SAVE_SHIPPING_ADDRESS,\r\n    SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id,qty) => async (dispatch, getState ) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    //console.log(\"aagaya idher bhii\",id,qty,data._id,data.name,data.price)\r\n    \r\n    dispatch({\r\n        type:ADD_TO_CART,\r\n        payload:{\r\n            product:data._id,\r\n            name: data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n     })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))    \r\n}        \r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState ) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    \r\n    \r\n    dispatch({\r\n        type:REMOVE_FROM_CART,\r\n        payload:data._id\r\n     })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))    \r\n}        \r\n\r\nexport const shipping = (data) => async (dispatch ) => {    \r\n    dispatch({\r\n        type:SAVE_SHIPPING_ADDRESS,\r\n        payload:data\r\n     })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))    \r\n}   \r\n\r\nexport const payment= (data) => async (dispatch ) => {    \r\n    dispatch({\r\n        type:SAVE_PAYMENT_METHOD,\r\n        payload:data\r\n     })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))    \r\n}   ","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector }from 'react-redux';\r\nimport { Row,Col,Button,Image,ListGroup,Card,Form } from 'react-bootstrap';\r\nimport  Message  from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector (state=> state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    },[dispatch, productId, qty]\r\n    )\r\n\r\n    const remove=(id)=>\r\n    {\r\n        dispatch(removeFromCart(id))\r\n    }   \r\n\r\n    const checkoutFunction=()=>\r\n    {\r\n        history.push('/Login?redirect=shipping')\r\n    }\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <h1>Shopping Cart</h1>\r\n                    {\r\n                        cartItems.length===0 ?(\r\n                        <Message variant='info'>\r\n                            Your Cart is Empty now <Link to='/'>Go Back</Link>\r\n                        </Message>)\r\n                        :\r\n                            <ListGroup variant='flush'>    \r\n                            {\r\n                             cartItems.map( (item) =>( \r\n                            <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                            <Col md={2}>\r\n                            \r\n                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                            </Col>\r\n                            <Col md={3}> \r\n                                <Link to={`/product/${item.product}`}>\r\n                                    {item.name}\r\n                                </Link>\r\n                            </Col>\r\n\r\n                            <Col md={2}>\r\n                                ${item.price}\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                            <Form.Control as=\"select\" value={item.qty} onChange={(e)=>{dispatch(addToCart(item.product,Number(e.target.value)))}} >\r\n\r\n                            {\r\n                                [...Array(item.countInStock).keys()].map((val)=>\r\n                                {\r\n                                    return(     \r\n                                    <option key={val+1} value={val+1}>\r\n                                    {val+1}\r\n                                    </option>)\r\n                                }\r\n                                )\r\n                            }\r\n\r\n                            </Form.Control>\r\n                            </Col>\r\n\r\n                            <Col md={1}>\r\n                            <Button\r\n                            type='button'\r\n                            variant='dark'\r\n                            onClick={()=>remove(item.product)}\r\n                            >\r\n                            <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                            </Col>\r\n                            </Row>\r\n                            </ListGroup.Item>                             \r\n                            ))}\r\n                            </ListGroup>\r\n\r\n                    }\r\n                </Col>\r\n                <Col md={4}>\r\n                <Card>\r\n                <ListGroup variant='flush'>\r\n                <ListGroup.Item >\r\n                   \r\n                                <h2>Subtotal\r\n                                ({cartItems.reduce((sum,val) => sum+val.qty,0)}) ITEMS</h2> \r\n                                ({cartItems.reduce((sum,val) => sum+(val.qty*Number(val.price)),0).toFixed(2)\r\n                                })\r\n                                \r\n\r\n                </ListGroup.Item>      \r\n                </ListGroup>              \r\n                \r\n                <ListGroup.Item >              \r\n                    <Button type ='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutFunction}>Proceed To Checkout</Button>   \r\n                </ListGroup.Item>\r\n              \r\n                \r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form,Button,Row,Col} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {loginUser} from '../actions/userActions'\r\n\r\nconst LoginScreen = ({location,history}) =>{\r\n\r\n   \r\n\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n   \r\n    const dispatch=useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {error,loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        \r\n        if(userInfo)\r\n        {\r\n            history.push(redirect)\r\n        }\r\n    \r\n        \r\n    }, [history,userInfo,redirect])\r\n\r\n    const send =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(loginUser(email,password))\r\n    }\r\n    return (\r\n\r\n  <div>\r\n  <h1>Sign in</h1>\r\n  {error && <Message variant='dark'> {error} </Message>}\r\n  {loading && <Loader/>}\r\n  <Form onSubmit ={send}>\r\n  <Form.Group className=\"mb-3\" controlId=\"email\">\r\n    <Form.Label>Username</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} \r\n       onChange = {(e)=>setEmail(e.target.value)} \r\n     />\r\n    \r\n  </Form.Group>\r\n\r\n  <Form.Group className=\"mb-3\" controlId=\"password\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Enter Password\" value={password}\r\n    onChange = {(e)=>setPassword(e.target.value)}  />\r\n  </Form.Group>\r\n  \r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Sign in\r\n  </Button>\r\n </Form>\r\n <Row>\r\n     <Col>\r\n     New Customer?\r\n         <Link to = {redirect ? `/register?redirect=${redirect}` : `/register`}> Register</Link>\r\n     </Col>\r\n </Row>\r\n  \r\n </div>\r\n \r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form,Button,Row,Col} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {registerUser} from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({location,history}) =>{\r\n\r\n   \r\n\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [name,setName] = useState('')\r\n    const [confirmPassword,setConfirmPassword] = useState('')\r\n    const [message,setMessage] = useState('')\r\n    \r\n    const dispatch=useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {error,loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        \r\n        if(userInfo)\r\n        {\r\n            history.push(redirect)\r\n        }\r\n    \r\n        \r\n    }, [history,userInfo,redirect])\r\n\r\n    const send =(e)=>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword)\r\n        {\r\n            setMessage(\"Passwords did not match\")\r\n        }\r\n        else\r\n        {\r\n        dispatch(registerUser(name,email,password))\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div>\r\n        {message && <Message variant = 'dark' >{message}</Message>}\r\n        <h1>Sign Up</h1>\r\n        {error && <Message variant='dark'> {error} </Message>}\r\n        {loading && <Loader/>}\r\n        <Form onSubmit ={send}>\r\n        <Form.Group className=\"mb-3\" controlId=\"text\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" required placeholder=\"Enter your full name\" value={name} \r\n             onChange = {(e)=>setName(e.target.value)} \r\n           />\r\n          \r\n        </Form.Group>\r\n      \r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control type=\"email\" required placeholder=\"Enter email\" value={email} \r\n             onChange = {(e)=>setEmail(e.target.value)} \r\n           />\r\n          \r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Enter Password\" value={password}\r\n          onChange = {(e)=>setPassword(e.target.value)}  />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Your Password\" value={confirmPassword}\r\n          onChange = {(e)=>setConfirmPassword(e.target.value)}  />\r\n        </Form.Group>\r\n        \r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Sign Up\r\n        </Button>\r\n       </Form>\r\n       <Row>\r\n           <Col>\r\n           Have an Account?\r\n               <Link to = {redirect ? `/login?redirect=${redirect}` : `/register`}> Sign In</Link>\r\n           </Col>\r\n       </Row>\r\n        \r\n       </div>\r\n       \r\n          )\r\n}\r\n\r\nexport default RegisterScreen","import axios from 'axios'\r\nimport {\r\n    PLACE_ORDER_REQUEST,\r\n    PLACE_ORDER_SUCCESS,\r\n    PLACE_ORDER_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    \r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport {CLEAR_CART} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const placedOrder =(order) => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:PLACE_ORDER_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.post(\r\n        '/api/orders/add/',\r\n        order,\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:PLACE_ORDER_SUCCESS,\r\n              payload:data\r\n            }) \r\n    \r\n    dispatch({\r\n        type:CLEAR_CART,\r\n        payload:data\r\n        }) \r\n\r\n       localStorage.removeItem('cartItems') \r\n\r\n        } catch(error)\r\n        {   \r\n            dispatch({type:PLACE_ORDER_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }   \r\n        \r\n}\r\n\r\nexport const getOrderDetails =(id) => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:ORDER_DETAILS_REQUEST\r\n    })\r\n\r\n    const {\r\n            userLogin :{userInfo} ,\r\n    } = getState()\r\n\r\n    const configuration = {\r\n        headers : {\r\n            'Content-type':'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n\r\n    const {data} =await axios.get(\r\n        `/api/orders/${id}/`,\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:ORDER_DETAILS_SUCCESS,\r\n              payload:data\r\n            }) \r\n\r\n        } catch(error)\r\n        {   \r\n            dispatch({type:ORDER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }   \r\n        \r\n}\r\n\r\n\r\nexport const payOrder =(id) => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:ORDER_PAY_REQUEST\r\n    })\r\n\r\n    const {\r\n        userLogin :{userInfo} ,\r\n          } = getState()\r\n\r\nconst configuration = {\r\n    headers : {\r\n        'Content-Type' : 'application/json',\r\n        'Accept' : 'application/json',\r\n        'Authorization' : `Bearer ${userInfo.token}`\r\n      }\r\n}\r\n// console.log(configuration)\r\nconst {data} =await axios.put(\r\n        `/api/orders/${id}/pay/`,{},\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:ORDER_PAY_SUCCESS,\r\n              payload:data\r\n            }) \r\n\r\n        } catch(error)\r\n        {   \r\n            dispatch({type:ORDER_PAY_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }   \r\n        \r\n}\r\n\r\nexport const allOrdersList = () => async (dispatch,getState)=>{\r\n\r\n    try{\r\n    dispatch({\r\n        type:ALL_ORDERS_REQUEST\r\n    })\r\n\r\n    const {\r\n        userLogin :{userInfo} ,\r\n          } = getState()\r\n\r\nconst configuration = {\r\n    headers : {\r\n        'Content-Type' : 'application/json',\r\n        'Accept' : 'application/json',\r\n        'Authorization' : `Bearer ${userInfo.token}`\r\n      }\r\n}\r\nconst {data} =await axios.get(\r\n        `/api/orders/all/`,\r\n        configuration\r\n        )\r\n\r\n    dispatch({\r\n              type:ALL_ORDERS_SUCCESS,\r\n              payload:data\r\n            }) \r\n\r\n        } catch(error)\r\n        {   \r\n            dispatch({type:ALL_ORDERS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ?   error.response.data.detail \r\n            :   error.message,  \r\n        })\r\n        }   \r\n        \r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Form,Button,Row,Col,Table} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {detailedUser,updatedUser} from '../actions/userActions'\r\nimport {allOrdersList} from '../actions/orderActions'\r\nimport {USER_UPDATE_RESET} from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({history}) =>{\r\n    const dispatch=useDispatch()\r\n    \r\n    const [email,setEmail] = useState('')\r\n    const [name,setName] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [confirmPassword,setConfirmPassword] = useState('')\r\n    const [message,setMessage] = useState('')\r\n   \r\n    \r\n\r\n    const userDetails = useSelector(state=>state.userDetails)\r\n    const {error,loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdate = useSelector(state=>state.userUpdate)\r\n    const {success} = userUpdate\r\n\r\n    const allOrders = useSelector(state=>state.allOrders)\r\n    const {loading:loadingOrders, orders, error:errorOrders} = allOrders\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n            if(!userInfo)\r\n            {\r\n                history.push('/login')\r\n            }\r\n            else\r\n            {\r\n                if(!user || !user.name ||success || userInfo._id !== user._id)\r\n                {\r\n                    dispatch({type: USER_UPDATE_RESET})\r\n                    dispatch(detailedUser())\r\n\r\n                    dispatch(allOrdersList())\r\n                }\r\n                 else{\r\n                     setName(user.name)\r\n                     setEmail(user.email)\r\n                 }\r\n            }       \r\n    }, [dispatch,history,userInfo,user,success,orders])\r\n\r\n    const send =(e)=>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword)\r\n        {\r\n            setMessage('PassWords Did Not Match')\r\n        }\r\n        else\r\n        {\r\n        dispatch(updatedUser(name,email,password))\r\n        setMessage('')\r\n        }\r\n    }\r\n\r\n    const summary = (id) =>{\r\n        history.push(`/order/${id}`)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        {message && <Message variant = 'dark' >{message}</Message>}\r\n    <Row>\r\n        <Col md={3}>\r\n\r\n          <h2>User Profile</h2>\r\n          {error && <Message variant='dark'> {error} </Message>}\r\n          {loading && <Loader/>}\r\n          <Form onSubmit={send}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"text\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\"  placeholder=\"Enter your full name\" value={name}\r\n                        onChange = {(e)=>setName(e.target.value)}\r\n                    />\r\n                    \r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type=\"email\"  placeholder=\"Enter email\" value={email}\r\n                        onChange = {(e)=>setEmail(e.target.value)}\r\n                    />\r\n                    \r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Enter Password\" value={password}\r\n          onChange = {(e)=>setPassword(e.target.value)}  />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Confirm Your Password\" value={confirmPassword}\r\n          onChange = {(e)=>setConfirmPassword(e.target.value)}  />\r\n        </Form.Group>\r\n                    \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                    Update\r\n                    </Button>\r\n           </Form>\r\n        </Col> \r\n        \r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? \r\n                \r\n                <Loader/>\r\n                :\r\n                errorOrders ? \r\n                <Message variant='danger'>{errorOrders}</Message>\r\n                :\r\n                (<Table striped responsive className=\"table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            ID\r\n                        </th>\r\n                        <th>\r\n                            DATE\r\n                        </th>\r\n                        <th>\r\n                            TOTAL\r\n                        </th>\r\n                        <th>\r\n                            PAID\r\n                        </th>\r\n                        <th>\r\n                            DELIVERED\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        orders.map(val=>\r\n                        {\r\n                            return (\r\n                                <tr>\r\n                                    <td>\r\n                                        {val._id}                                        \r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        {val.createdAt.substring(0,10)}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {val.totalPrice}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            val.isPaid ?\r\n                                            val.paidAt.substring(0,10)\r\n                                            :\r\n                                            <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                        }                                        \r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <Button className='btn-sm' onClick={()=>summary(val._id)}>\r\n                                            DETAILS\r\n                                        </Button>                                        \r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n\r\n            </Table>)\r\n            }\r\n            \r\n        </Col>    \r\n\r\n    </Row>\r\n    </div>\r\n    )\r\n}\r\nexport default ProfileScreen","import React from 'react';\r\nimport {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\n const Checkouts = (s) =>{\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n<Nav.Item>\r\n{s.s1 ? (<LinkContainer to='/login'>\r\n    <Nav.Link >Login</Nav.Link>\r\n </LinkContainer>)\r\n :<Nav.Link disabled>Login</Nav.Link>\r\n }\r\n\r\n</Nav.Item>\r\n     \r\n<Nav.Item>\r\n{s.s2 ? (<LinkContainer to='/shipping'>\r\n    <Nav.Link >Shipping</Nav.Link>\r\n </LinkContainer>)\r\n :<Nav.Link disabled>Shipping</Nav.Link>\r\n }\r\n\r\n</Nav.Item>\r\n\r\n<Nav.Item>\r\n{s.s3 ? (<LinkContainer to='/payment'>\r\n    <Nav.Link >Payment</Nav.Link>\r\n </LinkContainer>)\r\n :<Nav.Link disabled>Payment</Nav.Link>\r\n }\r\n\r\n</Nav.Item>\r\n\r\n<Nav.Item>\r\n{s.s4 ? (<LinkContainer to='/placeorder'>\r\n    <Nav.Link >Place Order</Nav.Link>\r\n </LinkContainer>)\r\n :<Nav.Link disabled>Place Order</Nav.Link>\r\n }\r\n\r\n</Nav.Item>\r\n     \r\n</Nav>\r\n  );\r\n}\r\n\r\nexport default Checkouts","import React, {useState} from 'react'\r\nimport {Container,Form,Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {shipping} from '../actions/cartActions'\r\nimport Checkouts from '../Checkouts'\r\n\r\nconst ShippingScreen=({history})=> {\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const [address,setAddress] = useState(shippingAddress.address)\r\n    const [city,setCity] = useState(shippingAddress.city)\r\n    const [country,setCountry] = useState(shippingAddress.country)\r\n    const [postalCode,setPostalCode] = useState(shippingAddress.postalCode)  \r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    const send=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(shipping({address,postalCode,city,country}))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n      <div>\r\n        <Checkouts s1 s2 />\r\n        <h1 style={{ textAlign:'center'}}>Shipping</h1>\r\n                \r\n        <Container className=\"d-flex justify-content-center\">\r\n        <Form onSubmit = {send} >\r\n        <Form.Group className=\"mb-3\" controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control type=\"text\" required placeholder=\"Enter your Address\" value={address ? address : ''} \r\n             onChange = {(e)=>setAddress(e.target.value)} \r\n           />\r\n          \r\n        </Form.Group>\r\n      \r\n        <Form.Group className=\"mb-3\" controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control type=\"number\" required placeholder=\"Enter your Postal Code\" value={postalCode ? postalCode : ''} \r\n             onChange = {(e)=>setPostalCode(e.target.value)} \r\n           />\r\n          \r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter City\" value={city ? city : ''}\r\n          onChange = {(e)=>setCity(e.target.value)}  />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter your Country\" value={country ? country :''}\r\n          onChange = {(e)=>setCountry(e.target.value)}  />\r\n        </Form.Group>\r\n        \r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Continue\r\n        </Button>\r\n        \r\n       </Form>\r\n      \r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState} from 'react'\r\nimport {Container,Form,Button,Col} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {payment} from '../actions/cartActions'\r\nimport Checkouts from '../Checkouts'\r\n\r\nconst  PaymentScreen=({history})=> {\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const [paymentMethod,setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n    if(!shippingAddress.address)\r\n    {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const send=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(payment(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Checkouts s1 s2 s3 />\r\n        <h1 style={{ textAlign:'center'}}>Payment</h1>\r\n                \r\n        <Container className=\"d-flex justify-content-center\">\r\n        <Form onSubmit = {send} >\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n          <Form.Check type=\"radio\" label=\"PayPal or Credit Card\" id=\"PayPal\" name='paymentMethod' checked   \r\n             onChange = {(e)=>setPaymentMethod(e.target.checked)} \r\n           >\r\n           </Form.Check>\r\n          \r\n          </Col>\r\n        </Form.Group>\r\n      \r\n       \r\n        \r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Continue  \r\n        </Button>\r\n        \r\n       </Form>\r\n      \r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useEffect} from 'react'\r\nimport {ListGroup,ListGroupItem,Card,Button,Col,Row,Image} from 'react-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport Checkouts from '../Checkouts'\r\nimport Message from '../components/Message'\r\nimport {placedOrder} from '../actions/orderActions'\r\nimport {ORDER_RESET} from '../constants/orderConstants'\r\n\r\nconst PlaceOrderScreen = ({history})=> {\r\n    const orderPlace = useSelector(state=>state.orderPlace)\r\n    const {order,error,success} = orderPlace\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((sum,val) => \r\n    sum + val.price*val.qty,0).toFixed(2)\r\n    \r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n\r\n    cart.taxPrice = (0.082 * cart.itemsPrice).toFixed(2)\r\n    \r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice)\r\n     + Number(cart.taxPrice)).toFixed(2)\r\n    \r\n     const object ={\r\n         orderItems: cart.cartItems,\r\n         shippingAddress:cart.shippingAddress,\r\n         paymentMethod:cart.paymentMethod,\r\n         itemsPrice:cart.itemsPrice,\r\n         shippingPrice:cart.shippingPrice,\r\n         taxPrice:cart.taxPrice,\r\n         totalPrice:cart.totalPrice\r\n     }\r\n\r\n    if(!cart.paymentMethod)\r\n    {\r\n        history.push('/payment')\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n            if(success){\r\n            history.push(`/order/${order._id}`)\r\n           \r\n            dispatch({\r\n                type:ORDER_RESET\r\n            })}\r\n             \r\n    }, [success,history,order,dispatch])\r\n\r\n\r\n    const Place=()=>{\r\n\r\n        dispatch(placedOrder(object))            \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Checkouts s1 s2 s3 s4/>\r\n\r\n        <Row>\r\n            <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Shipping: </strong>\r\n                        {cart.shippingAddress.address}{' '},\r\n                        {cart.shippingAddress.postalCode}{' '},\r\n                        {cart.shippingAddress.city}{' '},\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                \r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {cart.paymentMethod}{' '}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    <ListGroup variant ='flush'>\r\n                {\r\n                    cart.cartItems.length === 0 ?\r\n                    <Message variant = 'dark'>Your cart is empty</Message>:(\r\n                    \r\n                cart.cartItems.map((val,index)=>\r\n                {\r\n                return(\r\n                <ListGroupItem key={index}>\r\n                    <Row>\r\n                        <Col md={2}>\r\n                        <Image src={val.image} alt={val.name} fluid/>\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                            <p><strong>{val.name}</strong></p>\r\n                        </Col>\r\n                        \r\n                        <Col md={4}>\r\n                            <p>{val.qty}{\" \"}X{\" \"}{val.price}{\" = $\"}\r\n                            {val.qty*val.price}\r\n                            </p>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </ListGroupItem> \r\n                )\r\n                })\r\n                )\r\n                }\r\n                </ListGroup>\r\n                </ListGroup.Item>\r\n\r\n            </ListGroup>  \r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <h2 style={{textAlign:'center'}}>Order Summary</h2>\r\n                    { cart.cartItems.length === 0 ? \r\n                    <Message variant = 'dark'>Your cart is empty</Message> \r\n                    : <ListGroup vaiant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Items:</h> \r\n                                </Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Shipping:</h> \r\n                                </Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Tax:</h> \r\n                                </Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Total:</h> \r\n                                </Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    \r\n                        {\r\n                            error && \r\n                            <ListGroup.Item>\r\n                            <Message variant='danger'>{error}</Message>\r\n                            </ListGroup.Item>\r\n                        }\r\n                    \r\n                    </ListGroup>\r\n                 }\r\n                    \r\n                    <Button \r\n                    type ='button' \r\n                    className='btn-block' \r\n                    disabled={cart.cartItems.length === 0} \r\n                    onClick ={Place}\r\n                    >Place Order\r\n                    </Button>\r\n                    \r\n\r\n                </Card>\r\n            </Col>\r\n\r\n        </Row>\r\n        \r\n                      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useEffect} from 'react'\r\nimport {ListGroup,Card,Col,Row,Button} from 'react-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux'\r\n\r\nimport Message from '../components/Message'\r\nimport {getOrderDetails, payOrder} from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\r\nimport Loader from '../components/Loader';\r\n\r\nconst OrderScreen = ({match})=> {\r\n    const orderId = match.params.unique\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state=>state.orderDetails)\r\n    const {order,error,loading} = orderDetails\r\n    \r\n    const orderPay = useSelector(state=>state.orderPay)\r\n    const {success} = orderPay\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((sum,val) => \r\n        sum + val.price*val.qty,0).toFixed(2)\r\n    }\r\n    \r\n   \r\nuseEffect(() => {\r\n        \r\n                    if(!order ||success||order._id !==Number(orderId)){\r\n                    dispatch(\r\n                        getOrderDetails(orderId)\r\n                    )}\r\n                    if(success)\r\n                    {\r\n                        dispatch({type:ORDER_PAY_RESET})\r\n                    }\r\n                }, [dispatch,order,success,orderId])\r\n\r\n\r\n    const Pay = () =>{\r\n        dispatch(payOrder(orderId))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n        \r\n        {loading && <Loader />}\r\n        {error && <Message>{error}</Message>}\r\n        \r\n        {!loading && !error &&\r\n        <div>\r\n        <h1>ORDER:</h1>\r\n\r\n        <Row>\r\n            <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Name: </strong>{` ${order.user.name}`} <br></br>\r\n                        <strong>Email: </strong>\r\n                        <a href={`mailto:${order.user.email}`} >{order.user.email}</a>\r\n                        <br></br>\r\n                        <strong>Shipping: </strong>\r\n                        {order.shippingAddress.address}{' '},\r\n                        {order.shippingAddress.postalCode}{' '},\r\n                        {order.shippingAddress.city}{' '},\r\n                        {order.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                \r\n                \r\n                {order.isDelivered ?(\r\n                    <ListGroup.Item>\r\n                    <Message variant='success'>Delivered on {order.deliveredAt.substring(0,10)}</Message>\r\n                    </ListGroup.Item>)\r\n                    :\r\n                    (\r\n                        <ListGroup.Item>\r\n                    <Message variant='warning'>Not Delivered</Message>\r\n                    </ListGroup.Item>)\r\n                }\r\n                    \r\n                \r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}{' '}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                {order.isPaid ?(\r\n                    <Message variant='success'>Paid on {order.paidAt.substring(0,10)}</Message>)\r\n                    :\r\n                    (\r\n                    <Message variant='warning'>Not Paid</Message>)\r\n                }\r\n                    \r\n                </ListGroup.Item>\r\n            </ListGroup>  \r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <h2 style={{textAlign:'center'}}>Order Summary</h2>\r\n                    { order.orderItems.length === 0 ? \r\n                    <Message variant = 'dark'>Your cart is empty</Message> \r\n                    : <ListGroup vaiant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Items:</h> \r\n                                </Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Shipping:</h> \r\n                                </Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Tax:</h> \r\n                                </Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Total:</h> \r\n                                </Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    \r\n                        {\r\n                            error &&(\r\n                                <ListGroup.Item>\r\n                                 <Message variant='danger'>{error}</Message>\r\n                                 </ListGroup.Item>)\r\n                        }  \r\n                         {!order.isPaid &&\r\n\r\n                            <Button \r\n                            type ='button' \r\n                            className='btn-block' \r\n                            onClick ={Pay}\r\n                            >Pay it!!\r\n                            </Button>\r\n                        }               \r\n\r\n        \r\n\r\n                    </ListGroup>\r\n                 }  \r\n                </Card>\r\n            </Col>\r\n\r\n        </Row>\r\n        </div>\r\n        }       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {useEffect} from 'react'\r\nimport {ListGroup,Card,Col,Row} from 'react-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux'\r\n\r\nimport Message from '../components/Message'\r\nimport {getOrderDetails} from '../actions/orderActions'\r\nimport { ORDER_RESET } from '../constants/orderConstants';\r\nimport Loader from '../components/Loader';\r\n\r\nconst PaidScreen = ({match})=> {\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state=>state.orderDetails)\r\n    const {order,error,loading} = orderDetails\r\n    \r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((sum,val) => \r\n        sum + val.price*val.qty,0).toFixed(2)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n            if(!order || order._id !==Number(orderId)){\r\n            dispatch(\r\n                getOrderDetails(orderId)\r\n            )\r\n            \r\n        }\r\n             \r\n    }, [dispatch,order,orderId])\r\n\r\n    return (\r\n        <div>\r\n        \r\n        {loading && <Loader />}\r\n        {error && <Message>{error}</Message>}\r\n        \r\n        {!loading && !error &&\r\n        <div>\r\n        <h1>ORDER:</h1>\r\n\r\n        <Row>\r\n            <Col md={8}>\r\n            <ListGroup variant=\"flush\"                          >\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Name: </strong>{` ${order.user.name}`} <br></br>\r\n                        <strong>Email: </strong>\r\n                        <a href={`mailto:${order.user.email}`} >{order.user.email}</a>\r\n                        <br></br>\r\n                        <strong>Shipping: </strong>\r\n                        {order.shippingAddress.address}{' '},\r\n                        {order.shippingAddress.postalCode}{' '},\r\n                        {order.shippingAddress.city}{' '},\r\n                        {order.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                \r\n                \r\n                {order.isDelivered ?(\r\n                    <ListGroup.Item>\r\n                    <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                    </ListGroup.Item>)\r\n                    :\r\n                    (\r\n                        <ListGroup.Item>\r\n                    <Message variant='warning'>Not Delivered</Message>\r\n                    </ListGroup.Item>)\r\n                }\r\n                    \r\n                \r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}{' '}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                {order.isPaid ?(\r\n                    <Message variant='success'>Paid on {order.paidAt}</Message>)\r\n                    :\r\n                    (\r\n                    <Message variant='warning'>Not Paid</Message>)\r\n                }\r\n                    \r\n                </ListGroup.Item>\r\n            </ListGroup>  \r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <h2 style={{textAlign:'center'}}>Order Summary</h2>\r\n                    { order.orderItems.length === 0 ? \r\n                    <Message variant = 'dark'>Your cart is empty</Message> \r\n                    : <ListGroup vaiant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Items:</h> \r\n                                </Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Shipping:</h> \r\n                                </Col>\r\n                                <Col>${ORDER_RESET.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Tax:</h> \r\n                                </Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                   <h>Total:</h> \r\n                                </Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    \r\n                        {\r\n                            error &&(\r\n                                <ListGroup.Item>\r\n                                 <Message variant='danger'>{error}</Message>\r\n                                 </ListGroup.Item>)\r\n                        }  \r\n                </ListGroup>\r\n                 }  \r\n                </Card>\r\n            </Col>\r\n\r\n        </Row>\r\n        </div>\r\n        }       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaidScreen\r\n","import React, {useEffect} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {listUser,userDeleted} from '../actions/userActions'\r\n// import axios from 'axios'\r\nconst UserListScreen = ({history}) =>{\r\n    const dispatch=useDispatch()    \r\n\r\n    const userList = useSelector(state=>state.userList)\r\n    const {loading,users,error} = userList\r\n    //const [users,setUsers] = useState([])\r\n    \r\n    //states\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const userDelete = useSelector(state=>state.userDelete)\r\n    const {success:successComplete} = userDelete\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUser())\r\n        }\r\n        else{\r\n            history.push('/login')\r\n        }          \r\n    }, [successComplete,dispatch,history,userInfo])\r\n\r\n    const deleteUserFunction=(id)=>{\r\n        if(window.confirm(\"Are you sure you want to delete the user?\"))\r\n        {\r\n        dispatch(userDeleted(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n            <h2>USERS</h2>\r\n            {loading ? <Loader></Loader>\r\n            :\r\n            error ? <Message>{error}</Message>\r\n            :(\r\n           <Table striped bordered hover responsive className=\"table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            ID\r\n                        </th>\r\n                        <th>\r\n                            name\r\n                        </th>\r\n                        <th>\r\n                            email\r\n                        </th>\r\n                        <th>\r\n                            admin\r\n                        </th>\r\n                        <th>\r\n                            edit \r\n                        </th>\r\n                        <th>\r\n                            delete\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                       userInfo && userInfo.isAdmin &&users&& (\r\n                        users.map(val=>\r\n                        {\r\n                            return (\r\n                                <tr key={val._id}>\r\n                                    <td>\r\n                                        {val._id}                                        \r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        {val.name}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {val.email}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            val.isAdmin ?\r\n                                            <i className='fas fa-check' style={{color:'green'}}></i>\r\n                                            :\r\n                                            <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                        }                                        \r\n                                    </td>\r\n\r\n                                    <td>\r\n                                    <LinkContainer style={{cursor:'pointer'}} to={`/admin/user/${val._id}/edit`}>\r\n                                    <i className='fas fa-edit' ></i>\r\n                                    </LinkContainer>\r\n                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        <i className='fas fa-trash' style={{color:\"red\",cursor:'pointer'}} onClick={()=>deleteUserFunction(val._id)}></i>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )\r\n                        }))\r\n                    }\r\n                </tbody>\r\n\r\n            </Table>\r\n            )}\r\n            \r\n    </div>\r\n    )\r\n}\r\nexport default UserListScreen","import React, {useState, useEffect} from 'react';\r\nimport {Container,Form,Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {USER_MODIFY_RESET} from '../constants/userConstants'\r\nimport {getUser,modifyUser} from '../actions/userActions'\r\n\r\nconst UserEditScreen = ({match,history}) =>{\r\n    const userId = match.params.id\r\n    const dispatch=useDispatch()\r\n\r\n    const [email,setEmail] = useState('')\r\n    const [name,setName] = useState('')\r\n    const [admin,setAdmin] = useState(false)\r\n    //const [user,setUser] = useState([])\r\n    \r\n        \r\n    //states\r\n    const userGet = useSelector(state=>state.userGet)\r\n    const {loading,user,error} = userGet\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const userModify = useSelector(state=>state.userModify)\r\n    const {loading:loadingModify,success,error:errorModify} = userModify\r\n\r\n    useEffect(() => {\r\n      if(userInfo && userInfo.isAdmin){\r\n      if(success)\r\n      {\r\n        dispatch({type:USER_MODIFY_RESET})\r\n        history.push('/admin/userlist')\r\n      } \r\n      else{\r\n      if(!user || !user.name || Number(userId)!==user._id ){\r\n        dispatch(getUser(Number(userId)))\r\n      }\r\n      else{\r\n          setEmail(user.email)\r\n          setName(user.name)\r\n          setAdmin(user.isAdmin)\r\n        }\r\n      }\r\n    }\r\n    else{\r\n          history.push('/login') \r\n        }\r\n\r\n        }, [dispatch,userId,user,userInfo,history,success])\r\n\r\n    const send =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(modifyUser(Number(userId),name,email,admin))\r\n    }\r\n    return (\r\n\r\n        <div>\r\n        {\r\n          loading ? <Loader/>\r\n          :\r\n          error ? <Message>{error}</Message>:\r\n          <>\r\n          <Link to={'/admin/userlist'}>\r\n            Go Back\r\n          </Link>\r\n\r\n        <h1 style={{ textAlign:'center'}}>Edit User</h1>\r\n        {\r\n          loadingModify && <Loader/>\r\n        }\r\n        {\r\n          errorModify && <Message>{errorModify}</Message>\r\n        }\r\n        <Container className=\"d-flex justify-content-center\">\r\n        <Form onSubmit ={send}>\r\n        <Form.Group className=\"mb-3\" controlId=\"text\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\"  placeholder=\"Enter your full name\" value={name} \r\n             onChange = {(e)=>setName(e.target.value)} \r\n           />\r\n          \r\n        </Form.Group>\r\n      \r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control type=\"email\"  placeholder=\"Enter email\" value={email} \r\n             onChange = {(e)=>setEmail(e.target.value)} \r\n           />\r\n          \r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"isadmin\">\r\n          <Form.Check label=\"Is Admin\"  type=\"checkbox\" checked={admin} \r\n             onChange = {(e)=>setAdmin(e.target.checked)} \r\n           />  \r\n        </Form.Group>\r\n\r\n       \r\n        \r\n        <Button variant=\"primary\" type=\"submit\">\r\n            Update\r\n        </Button>\r\n       </Form>\r\n        </Container>\r\n        </>\r\n        }\r\n        \r\n       </div>\r\n       \r\n          )\r\n}\r\n\r\nexport default UserEditScreen","import React, {useEffect} from 'react';\r\nimport {Table,Row,Col,Button} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {listProducts,deleteProduct} from '../actions/productActions'\r\n// import axios from 'axios'\r\nconst ProductListScreen = ({history}) =>{\r\n    const dispatch=useDispatch()    \r\n\r\n    //states\r\n    const productList = useSelector(state=>state.productList)\r\n    const {loading,error,products} = productList  \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const productDelete = useSelector(state=>state.productDelete)\r\n    const {loading:loadingDelete,error:errorDelete,success} = productDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listProducts())\r\n        }\r\n        else{\r\n            history.push('/login')\r\n        }          \r\n    }, [dispatch,history,userInfo,success])\r\n\r\n    const deleteProductFunction=(id)=>{\r\n        if(window.confirm(\"Are you sure you want to delete the product?\"))\r\n        {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>productS</h2>\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n                {\" \"}\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n                <Button variant=\"dark\">\r\n                    <i className=\"fas fa-plus\" ></i>\r\n                    {\" \"}Create Product\r\n                </Button>\r\n            </Col>\r\n            \r\n        </Row>\r\n\r\n        <br/>\r\n            {\r\n                loadingDelete && <Loader/>\r\n            }\r\n            {\r\n                errorDelete && <Message>{errorDelete}</Message>\r\n            }\r\n            {loading ? <Loader></Loader>\r\n            :\r\n            error ? <Message>{error}</Message>\r\n            :(\r\n                \r\n           <Table striped bordered hover responsive className=\"table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            ID\r\n                        </th>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>\r\n                            Price\r\n                        </th>\r\n                        <th>\r\n                            Category\r\n                        </th>\r\n                        <th>\r\n                            Brand\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                       userInfo && userInfo.isAdmin && products && (\r\n                        products.map(val=>\r\n                        {\r\n                            return (\r\n                                <tr key={val._id}>\r\n                                    <td>\r\n                                        {val._id}                                        \r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        {val.name}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {val.price}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {val.category}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {val.brand}                                        \r\n                                    </td>\r\n                                    <td>\r\n                                    <LinkContainer style={{cursor:'pointer'}} to={`/admin/product/${val._id}/edit`}>\r\n                                    <i className='fas fa-edit' ></i>\r\n                                    </LinkContainer>\r\n                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        <i className='fas fa-trash' style={{color:\"red\",cursor:'pointer'}} onClick={()=>deleteProductFunction(val._id)}></i>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )\r\n                        }))\r\n                    }\r\n                </tbody>\r\n\r\n            </Table>\r\n            )}\r\n            \r\n    </div>\r\n    )\r\n}\r\nexport default ProductListScreen","import {Container} from 'react-bootstrap'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport PaidScreen from './screens/PaidScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nfunction App() {\n  return (\n    <Router >\n    <Header/>\n    <main className=\"py-5\">\n    <Container>\n      <Route path='/' component={HomeScreen} exact/>\n      <Route path='/login' component={LoginScreen} />\n      <Route path='/register' component={RegisterScreen} />\n      <Route path='/profile' component={ProfileScreen} />\n      <Route path='/shipping' component={ShippingScreen} />\n      <Route path='/payment' component={PaymentScreen} />\n      <Route path='/placeorder' component={PlaceOrderScreen} />\n      <Route path='/order/:unique' component={OrderScreen} />\n      <Route path='paid/order/:id' component={PaidScreen} />\n      <Route path='/product/:id' component={ProductScreen}/>\n      <Route path='/Cart/:id?' component={CartScreen}/>\n      <Route path='/admin/userlist' component={UserListScreen}/>\n      <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\n      <Route path='/admin/products' component={ProductListScreen}/>\n      </Container>\n    </main>\n    <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}